#include <Wire.h>
#include <DHT.h>                    // 온습도 센서 모듈 라이브러리
#include <Servo.h>
 
#define soilPin A0 
#define cdsPin A1
#define DHTTYPE DHT11               // 온습도 센서타입 설정
#define DHTPIN 4                    // 온습도센서 모듈 핀           
#define lightingPin 3    
#define motorPin1_1 6
#define motorPin1_2 7 
#define motorPin2_1 9 
#define motorPin2_2 10 
#define pumpPin1 11
#define pumpPin2 12
#define servoPin 2

DHT dht(DHTPIN, DHTTYPE);           //온습도 센서 모듈
Servo servo;
unsigned long previousMillis = 0;
const long interval = 2000;

int temp_value = 0;
int humi_value = 0;
int soil_value = 0;
int light_value =0;

int prev_tV = 99;
int prev_hV = 99;
int prev_sV = 99;
int prev_lV = 99;


void setup() {
  Serial.begin(9600);

  pinMode(DHTPIN, OUTPUT);
  pinMode(cdsPin, INPUT);
  pinMode(soilPin, INPUT);
  pinMode(lightingPin, OUTPUT);
  pinMode(motorPin1_1, OUTPUT);
  pinMode(motorPin1_2, OUTPUT);
  pinMode(motorPin2_1, OUTPUT);
  pinMode(motorPin2_1, OUTPUT);
  pinMode(pumpPin1, OUTPUT);
  pinMode(pumpPin2, OUTPUT);
  pinMode(servoPin, OUTPUT);
  
  dht.begin();
}

void loop() {
  
  unsigned long currentMillis = millis();
  
  // 2초마다 온도 값을 갱신
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    //센서값 측정
    int cdsValue = analogRead(cdsPin);                // 조도센서 값 측정: 0(밝음) ~ 1023(어두움)
    int cds = map(cdsValue, 0, 1023, 0, 100);
    int soilValue = analogRead(soilPin);
    int soil = map(soilValue, 0, 1023, 100, 0);  // 센서 값을 퍼센트로 변경
    int temp = dht.readTemperature();
    int humi = dht.readHumidity();

//    Serial.print("Temperature:");
//    Serial.print(temp);
//    Serial.print(" Humidity:");
//    Serial.print(humi);
//    Serial.print(" soil_moisture:");
//    Serial.print(soil);
//    Serial.print(" Light_intensity:");
//    Serial.print(cds);
  
//    Serial.println();

    if (Serial.available() > 0) {
      String data = Serial.readStringUntil(','); // 시리얼로부터 데이터를 읽음
      
      if (data.startsWith("ON") || data.startsWith("OFF")) {
        
        servo_control((data.startsWith("ON")) ? 1 : 0);
        
      }
      else {
        
        if (data == "unknown") {
        // 이전 값을 사용하여 변수 설정
          temp_value = prev_tV;
        } else {
          temp_value = data.toInt();
          prev_tV = temp_value; // 새로운 값을 이전 값으로 업데이트
        }
        data = Serial.readStringUntil(',');
        if (data == "unknown") {
          humi_value = prev_hV;
        } else {
          humi_value = data.toInt();
          prev_hV = humi_value;
        }
        data = Serial.readStringUntil(',');
        if (data == "unknown") {
          soil_value = prev_sV;
        } else {
          soil_value = data.toInt();
          prev_sV = soil_value;
        }
        data = Serial.readStringUntil('\n');
        if (data == "unknown") {
          light_value = prev_lV;
        } else {
          light_value = data.toInt();
          prev_lV = light_value;
        }
        control(temp_value, humi_value, soil_value, light_value, temp, humi, soil, cds);
      }
      
    }
  }  
}

void control(int temp_value, int humi_value, int soil_value,int light_value, int temp, int humi, int soil, int cds) {
  Serial.println(temp_value);
  Serial.println(humi_value);
  Serial.println(soil_value);
  Serial.println(light_value); 
  
  if (temp > temp_value || humi > humi_value) {
    digitalWrite(motorPin1_1, HIGH);
    digitalWrite(motorPin1_2, LOW);
    
    digitalWrite(motorPin2_1, HIGH);
    digitalWrite(motorPin2_2, LOW);
  } 
  else {
    digitalWrite(motorPin1_1, LOW);
    digitalWrite(motorPin1_2, LOW);
    
    digitalWrite(motorPin2_1, LOW);
    digitalWrite(motorPin2_2, LOW);
  }

  if (cds > light_value) {
    digitalWrite(lightingPin, HIGH);
  }
  else {
    digitalWrite(lightingPin, LOW);
  }

  if (soil < soil_value) {
    digitalWrite(pumpPin1, HIGH);
    digitalWrite(pumpPin2, LOW);
  }
  else {
    digitalWrite(pumpPin1, LOW);
    digitalWrite(pumpPin2, LOW);
  }
}

void servo_control (int servo_value) {
  int pos;
  Serial.println(servo_value);
  if (servo_value == 1){
    for (pos = 0; pos <= 180; pos+=1) {
      servo.write(pos);
      delay(100);
    }
    for (pos = 180; pos >=0; pos -=1) {
      servo.write(pos);
      delay(100);
    }
  } else if (servo_value == 0) {
    servo.write(0);
  }
}
